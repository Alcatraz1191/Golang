---
Description: Setup an Amazon Linux Web server

Parameters:
  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: Name of an existing EC2 keypair to enable SSH access to the instance
  SSHCIDR:
    Type: String
    Description: The CIDR block restricting SSH
    MinLength: 9
    Default: 131.247.0.0/16
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x

Mappings:
  Region2AMI: 
    us-east-1:
      AMI: ami-032930428bf1abbff
    us-east-2:
      AMI: ami-027cab9a7bf0155df
    us-west-1:
      AMI: ami-088c153f74339f34c
    us-west-2:
      AMI: ami-01fee56b22f308154
    ap-south-1:
      AMI: ami-03cfb5e1fb4fac428
    ap-northeast-2:
      AMI: ami-0493ab99920f410fc
    ap-southeast-1:
      AMI: ami-0ba35dc9caf73d1c7
    ap-southeast-2:
      AMI: ami-0ae99b503e8694028
    ap-northeast-1:
      AMI: ami-0b2c2a754d5b4da22
    ca-central-1:
      AMI: ami-0803e21a2ec22f953
    eu-central-1:
      AMI: ami-0474863011a7d1541
    eu-west-1:
      AMI: ami-015232c01a82b847b
    eu-west-2:
      AMI: ami-0765d48d7e15beb93
    eu-west-3:
      AMI: ami-0caf07637eda19d9c
    eu-north-1:
      AMI: ami-0de4b8910494dba0f
    sa-east-1:
      AMI: ami-0a52e8a6018e92bb0

Resources:
  EC2Instance:
    Type: AWS::EC2::Instance
    Metadata:
      AWS::CloudFormation::Init:
        configSets:
          InstallAndConfig:
            - Install
            - Configure
            
        Install:
          packages:
            yum:
              httpd: []
              nginx: []

          files:
            /etc/nginx/nginx.conf:
              content: |
                user nginx;
                worker_processes auto;
                error_log /var/log/nginx/error.log;
                pid /var/run/nginx.pid;
                
                include /usr/share/nginx/modules/*.conf;
                
                events {
                    worker_connections 1024;
                }
                
                http {
                    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                                      '$status $body_bytes_sent "$http_referer" '
                                      '"$http_user_agent" "$http_x_forwarded_for"';
                
                    access_log  /var/log/nginx/access.log  main;
                
                    sendfile            on;
                    tcp_nopush          on;
                    tcp_nodelay         on;
                    keepalive_timeout   65;
                    types_hash_max_size 4096;
                
                    include             /etc/nginx/mime.types;
                    default_type        application/octet-stream;
                
                    # Load modular configuration files from the /etc/nginx/conf.d directory.
                    # See http://nginx.org/en/docs/ngx_core_module.html#include
                    # for more information.
                    include /etc/nginx/conf.d/*.conf;
                
                    index   index.html index.htm;
                
                    server {
                        listen       80;
                        listen       [::]:80;
                        server_name  _;
                        root         /var/www/html;
                
                        # Load configuration files for the default server block.
                        include /etc/nginx/default.d/*.conf;
                
                        # redirect server error pages to the static page /40x.html
                        #
                        error_page 404 /404.html;
                            location = /40x.html {
                        }
                
                        # redirect server error pages to the static page /50x.html
                        #
                        error_page 500 502 503 504 /50x.html;
                            location = /50x.html {
                        }
                    }
                }
              mode: '000644'
              owner: root
              group: root
            /var/www/html/index.html:
              content: |
                <html>
                  <title>Shreya Gadikar</title>
                  <body>
                  <h1>Shreya Gadikar</h1>
              mode: '000644'
              owner: root
              group: root
              
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
                interval=1
              mode: '000400'
              owner: root
              group: root
              
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.EC2Instance.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource EC2Instance --region ${AWS::Region} --configsets InstallAndConfig
                runas=root
              mode: '000400'
              owner: root
              group: root

          services:
            sysvinit:
              httpd:
                enabled: 'true'
                ensureRunning: 'true'
              cfn-hup:
                enabled: 'true'
                ensureRunnig: 'true'
                files:
                  - /etc/cfn/cfn-hup.conf
                  - /etc/cfn/hooks.d/cfn-auto-reloader.conf
                  
        Configure:
          commands:
            output_public_DNS:
              command: !Sub |
                echo "Public DNS: " >> /var/www/html/index.html
            output_public_DNS2:    
              command: !Sub |
                curl -s http://169.254.169.254/latest/meta-data/public-hostname -w "\n" >> /var/www/html/index.html
            output_Region:    
              command: !Sub |
                echo "Region: " >> /var/www/html/index.html
            output_Region2:
              command: !Sub |
                curl -s http://169.254.169.254/latest/meta-data/placement/availability-zone >> /var/www/html/index.html
                
    Properties:
      ImageId: !FindInMap [Region2AMI, !Ref 'AWS::Region', 'AMI']
      InstanceType: t2.micro
      SecurityGroups:
      - !Ref WebserverSecurityGroup
      Tags:
      - Key: Name
        Value: Amazon Linux Web Server
      KeyName: !Ref KeyName
      UserData:
        'Fn::Base64': !Sub |
          #!/bin/bash -x
          yum update -y aws-cfn-bootstrap
          # notice change from -r to --resource 
          /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource EC2Instance --region ${AWS::Region} --configsets InstallAndConfig
          
  WebserverSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allows ssh and http
      SecurityGroupIngress:
      - CidrIp: 0.0.0.0/0
        FromPort: 80
        IpProtocol: tcp
        ToPort: 80
      - CidrIp: !Ref SSHCIDR
        FromPort: 22
        IpProtocol: tcp
        ToPort: 22
        
Outputs:
  WebURL:
    Description: The URL for the web page.
    Value: !Sub 'http://${EC2Instance.PublicIp}'
  PublicDNS:
    Description: The AWS public DNS name for our instance
    Value: !Sub ${EC2Instance.PublicDnsName}
    